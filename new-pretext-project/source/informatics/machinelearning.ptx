<?xml version='1.0' encoding='utf-8'?>

<chapter xml:id="machine-learning" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Machine Learning</title>

    <section xml:id="m-l-intro">
        <title>Introduction</title>
        <p>I find it easier to remember concepts when I define them in terms of Objects and the Morphisms that act on the objects. 
        Usually a lot of concepts can be reduced to a set <m>X</m>, a function <m>f</m> that acts on <m>X</m>, and its image <m>Y</m>. 
        To save some brain space, I will define an algorithm to be a pair of functions <m>(f,g)</m>. 
        Here, <m>g:\mathbb{N}\to\mathbb{R}^+</m> computes the time it takes <m>f</m> to compute the output. Models are usually 
        the output of the function <m>f</m>.
        </p>
        <example>
            <p>
                Given an unordered list, the time it will take to order it clearly depends on the size of the list.
            </p>
        </example>
    </section>

    <section xml:id="m-l-definitions">
        <title>Definitions</title>
        <p>
        Perceptron:
        Consider the set <m>S</m> of training datas with labels. In other words, an element of <m>S</m> is a set of training data
        including a label field.
        A perceptron is a function <m>f</m> from <m>S</m> to the set of Threshold Functions such that 
        the domain of f(x) is x. A Threshold Function is defined as follows:
        <me>
        f(\mathbf{x})= \begin{cases}1  \text { if } \mathbf{w} \cdot \mathbf{x}+b>0 \\ 0  \text { otherwise }\end{cases}
        </me>
        where <m>\mathbf{x,w}\in\mathbb{R}^n</m>.
        Now, for Neural Networks the definition changes a little. And most other definitions for Neural Networks will be molded 
        similarly defined. This time, the domain and codomain are the product <m>S\times N_1</m> and <m>N_1</m> respectively, 
        where <m>N_1</m> is the set of all single layer neurons.
        </p>
        <p>
        To define support vector machines, we will need to define a few more concepts and theorems. 
        </p>

        <p>
        Support Vector Machine:
        A support vector machine is defined as a function <m>f</m>, and its 


        </p>

        <p>
        Backpropagation:

        </p>
        <p>
        Quick-sort: 
        Quicksort is a type of divide and conquer algorithm for sorting lists. Given an unordered list {n_0,\ldots, n_k}, the algorithm starts by
        choosing a random element of the list. This element will be called the pivot. By choosing this element, it creates
        a partition of the list. One partition is the elements on the left
        </p>

        <p>Divide and Conquer</p>



    </section>

</chapter>

